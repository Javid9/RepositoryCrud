@model List<RepositoryDemo.Entity.Product>

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}



<div class="row">
    <a class="btn btn-info mt-2" asp-action="Add"> Create Product</a>
    <table class="table table-dark table-hover mt-2">
        <thead>
        <tr>
            <td>
                <input type="checkbox"  id="all-checked">
                All
            </td>
            <th scope="col">Image</th>
            <th scope="col">Name</th>
            <th scope="col">CategoryName</th>
            <th scope="col">Prices</th>
            <th scope="col">Quantity</th>
             <th scope="col">Details</th>
            <th scope="col">Update</th>
            <th scope="col">Delete</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="checkbox" class="product-input" name="productList" id="@item.Name" value="@item.Id">
                </td>
                
                <td>
                    <img src="~/image/@item.Image" style="width:100px;height:100px"/>
                </td>
                <td>@item.Name</td>
                <td>@item.Category.Name</td>
                <td>@item.Price</td>
                <td>@item.Quantity</td>
                
                <td>
                    <a class="btn-outline-info" asp-action="Details" asp-route-id="@item.Id">
                        Details
                    </a>
                </td>
                
                <td>
                    <a class="btn-outline-primary" asp-action="Update" asp-route-id="@item.Id">
                        Update
                    </a>
                </td>
                <td >
                    <a class="btn-outline-danger btn-delete" data-id="@item.Id">
                        Delete
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <a class="btn btn-secondary mt-2 " id="save-order" style="width: 17%" >Order Save</a>
</div>


 


@section Scripts
{
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>;
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>



    <script>
    let saveOrderBtn=document.getElementById("save-order");
    saveOrderBtn.addEventListener("click",function (){
       let checkBox=document.querySelectorAll(".product-input");
            let checkBoxValueArr=[]
            checkBox.forEach(item =>{
                if (item.checked){
                    checkBoxValueArr.push(Number(item.value));
                    }
            } );
            if (checkBoxValueArr.length>0){
                let formData=new FormData();
                checkBoxValueArr.forEach(item =>{
                  formData.append("productList[]",item)
                })
                axios.post('/order/create',formData)
                  .then(function (response) {
                      Swal.fire({
                        title: 'Good job!',
                        text: 'Product saved successfully.',
                        success:'success',
                        timer: 5000
                      })
                      
                       setTimeout(function(){window.top.location="Order/Index"} ,1500);

                  })
                  .catch(function (error) {
                        Swal.fire(
                            'Sorry bro',
                             'Are you sure project run?',
                             'error'
                           )              
                  });
            } 
            else{
                 Swal.fire(
                    'Oops!',
                     'Please select product',
                     'error'
                   )     
           }
    });
    
    
    
    
     // All checkbox
   
      $('#all-checked').click(function(event) {   
          if(this.checked) {
              $(':checkbox').each(function() {
                  this.checked = true;                        
              });
          } else {
              $(':checkbox').each(function() {
                  this.checked = false;                       
              });
          }
      }); 
    
      
      
      
      //Delete
      let btnDelete = document.querySelectorAll(".btn-delete");
              btnDelete.forEach(item => {
                  item.addEventListener("click", function (e) {
                      let id = e.target.getAttribute("data-id");
                      Swal.fire({
                          title: 'Do you want to delete?',
                          showCancelButton: true,
                          confirmButtonText: 'Yes',
                      }).then((result) => {
                          /* Read more about isConfirmed, isDenied below */
                          if (result.isConfirmed) {
                              axios.post('/Product/Delete?id=' + id)
                                  .then(function (response) {
                                      console.log(response.data.message)
                                      Swal.fire({
                                          position: 'top-center',
                                          icon: response.data.success ? 'success' : 'error',
                                          title: response.data.message,
                                          showConfirmButton: false,
                                          timer: 1300
                                      }).then(function (result) {
                                          window.location = '/Product/Index';
                                      })
                                  })
                                  .catch(function (error) {
                                  });
                          }
                      });
                   
                  });
              })
      
      
    </script>





}
